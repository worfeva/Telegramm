import os
import json
import shutil
import sqlite3
import re
import logging
from datetime import datetime
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, Bot
from telegram.ext import (
    ApplicationBuilder, CommandHandler, ConversationHandler, MessageHandler, ContextTypes, filters, CallbackQueryHandler)
from collections import Counter

ADMIN_CHAT_ID = 5115887933
BOT_TOKEN = "7986033726:AAHyB1I77N68Z53-YOj1B5uhJLXEuB7XdEU"
bot = Bot(token=BOT_TOKEN)
app = ApplicationBuilder().token(BOT_TOKEN).build()
PUBLIC_URL = os.environ.get("PUBLIC_URL", "https://telegramm-production.up.railway.app")
consultation_chats = {}
stats_file = "stats.json"
db_file = "logs.db"
REVIEWS_DB_FILE = "reviews.db"
BACKUP_DIR = "reviews_backup"
MAX_TEXT_LENGTH = 500
SECRET_MODERATION_CODE = "/140013"
STOP_WORDS = {"–∏", "–≤", "–Ω–∞", "—Å", "–ø–æ", "–∑–∞", "–∫", "–¥–ª—è", "—ç—Ç–æ", "–Ω–µ", "–∞", "–æ", "—É"}
TITLE, RATING, TEXT, NICKNAME, NICKNAME_CUSTOM, CONFIRM, READING = range(7)
WAITING_EDIT_TEXT = 10
ADMIN_READING, ADMIN_EDITING = range(2)
CONSULTANTS = {
    "andrey": {"id": 5115887933, "name": "–Æ–∑ –ê–Ω–¥—Ä–µ–π –ê–Ω–∞—Ç–æ–ª—å–µ–≤–∏—á", "username": "@worfeva"},
    "valentin": {"id": 1061541258, "name": "–ö–∞–∑–∞–Ω–æ–≤ –í–∞–ª–µ–Ω—Ç–∏–Ω –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á", "username": "@kazanovval"}
}

payment_links = {
    "yoomoney": "https://yoomoney.ru/to/4100119195367811",
    "paypal": "https://paypal.me/YAndrej",
    "sberbank": "https://www.sberbank.com/sms/pbpn?requisiteNumber=79175279883"
}
CONSULTANT_WARNING = (
    "–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–µ—Ä–≤–∏—á–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 2500 —Ä—É–±–ª–µ–π. –ü–æ–≤—Ç–æ—Ä–Ω–æ–π - 1000 —Ä—É–±–ª–µ–π \n\n" 
    "‚ùóÔ∏è–ú—ã —Å—Ç—Ä–æ–≥–æ —Å–æ–±–ª—é–¥–∞–µ–º –≤—Ä–∞—á–µ–±–Ω—É—é —Ç–∞–π–Ω—É. –ù–∞–º–µ—Ä–µ–Ω–Ω–æ–µ —Ä–∞–∑–≥–ª–∞—à–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º –∏—Å–∫–ª—é—á–µ–Ω–æ. –¢–µ–º –Ω–µ –º–µ–Ω–µ–µ, –≤ —Ü–µ–ª—è—Ö –í–∞—à–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–æ—Å—å–±–∞ —É–¥–∞–ª—è—Ç—å –≤—Å–µ –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –ø—Ä–∏—Å—ã–ª–∞–µ–º—ã—Ö –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤‚ùóÔ∏è\n\n"
"‚ùóÔ∏è–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –Ω–µ —è–≤–ª—è—é—Ç—Å—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π —É—Å–ª—É–≥–æ–π –∏ –Ω–µ –∑–∞–º–µ–Ω—è—é—Ç –æ—á–Ω—ã–π –ø—Ä–∏—ë–º‚ùóÔ∏è\n\n"
    "–°–æ–∑–¥–∞–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ç–∏–≤–Ω—ã–π —á–∞—Ç –í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ, —á—Ç–æ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω—ã —Å —É—Å–ª–æ–≤–∏—è–º–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –æ–ø–ª–∞—Ç—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏."
)
THANK_YOU_TEXT = (
    "üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É!\n\n"
    "–¢–µ–ø–µ—Ä—å –í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –¥–æ–∫—Ç–æ—Ä–æ–º –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤ –ø–µ—Ä–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –ø–æ–¥—Ä–æ–±–Ω–æ –∏–∑–ª–æ–∂–∏—Ç–µ –í–∞—à –∞–Ω–∞–º–Ω–µ–∑, —Å–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –∏ –ø—Ä–∏–Ω–∏–º–∞–µ–º—ã–µ –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã (–¥–æ–∑–∏—Ä–æ–≤–∫–∏ –≤ –º–∏–ª–∏–≥—Ä–∞–º–º–∞—Ö). –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∏—Ç –í–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è."
)
# === –°–±–æ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ ===    
conn_logs = sqlite3.connect("db_file", check_same_thread=False)
cursor_logs = conn_logs.cursor()
cursor_logs.execute("""
CREATE TABLE IF NOT EXISTS logs (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    message TEXT,
    date TEXT
)
""")
conn_logs.commit()

word_counter = {}
if os.path.exists(stats_file):
    with open(stats_file, "r", encoding="utf-8") as f:
        try:
            word_counter = json.load(f)
        except json.JSONDecodeError:
            word_counter = {}

async def log_message(update: Update):
    global word_counter
    if not update.message or not update.message.text:
        return
    text = update.message.text.strip()

    cursor_logs.execute(
        "INSERT INTO logs (message, date) VALUES (?, ?)",
        (text, datetime.now().isoformat())
    )
    conn_logs.commit()

    words = re.findall(r'\b\w+\b', text.lower())
    for word in words:
        if word not in STOP_WORDS:
            word_counter[word] = word_counter.get(word, 0) + 1

    with open(stats_file, "w", encoding="utf-8") as f:
        json.dump(word_counter, f, ensure_ascii=False, indent=2)

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ ==
    # === /stats ===
async def stats(update: Update, context: ContextTypes.DEFAULT_TYPE):
    cursor_logs.execute("SELECT message FROM logs")
    all_messages = cursor_logs.fetchall()
    words = []
    for (msg,) in all_messages:
        msg_words = re.findall(r'\b\w+\b', msg.lower())
        msg_words = [w for w in msg_words if w not in STOP_WORDS]
        words.extend(msg_words)
    counter = Counter(words)
    filtered_words = {word: count for word, count in counter.items() if count > 5}

    if not filtered_words:
        stats_text = "üìä –ù–µ—Ç —Å–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤—Å—Ç—Ä–µ—á–∞–ª–∏—Å—å –±–æ–ª–µ–µ 5 —Ä–∞–∑."
    else:
        stats_text = "üìä –°–ª–æ–≤–∞, –≤—Å—Ç—Ä–µ—á–∞–≤—à–∏–µ—Å—è –±–æ–ª–µ–µ 5 —Ä–∞–∑:\n\n"
        for word, count in filtered_words.items():
            stats_text += f"‚Ä¢ {word} ‚Äî {count} —Ä–∞–∑(–∞)\n"

    await update.message.reply_text(stats_text)

# === /start ===
async def start(update, context):
    await update.message.reply_text("–ß–µ–º —è –º–æ–≥—É –í–∞–º –ø–æ–º–æ—á—å?"
    )
# === –í–æ–ø—Ä–æ—Å—ã ===
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.strip().lower()
    if not update.message or not update.message.text:
        return

    keywords_rf = ["–ü–æ–≤—ã—à–µ–Ω","—Ä–µ–≤–º–∞—Ç–æ–∏–¥–Ω—ã–π","—Ñ–∞–∫—Ç–æ—Ä","–†–§","–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π"] 
    if any(keyword.lower() in text for keyword in keywords_rf):
        await update.message.reply_text(
            "üß™ –ü–æ–≤—ã—à–µ–Ω–Ω—ã–µ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –±–µ–∑ —Å–∏–º–ø—Ç–æ–º–æ–≤ ‚Äî —ç—Ç–æ –ù–ï –¥–∏–∞–≥–Ω–æ–∑.\n\n"
                "–ú–Ω–æ–≥–∏–µ –ª—é–¥–∏ –º–æ–≥—É—Ç –∏–º–µ—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–≤–º–∞—Ç–æ–∏–¥–Ω—ã–π —Ñ–∞–∫—Ç–æ—Ä (–†–§) –∏–ª–∏ –∞–Ω—Ç–∏–Ω—É–∫–ª–µ–∞—Ä–Ω—ã–µ, –Ω–µ –∏–º–µ—è —Ä–µ–≤–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è.\n\n"
            "‚úÖ –ï—Å–ª–∏ –≤—ã:\n"
            "‚Äî –Ω–µ –æ—â—É—â–∞–µ—Ç–µ –±–æ–ª–µ–π, —É—Ç—Ä–µ–Ω–Ω–µ–π —Å–∫–æ–≤–∞–Ω–Ω–æ—Å—Ç–∏ –±–æ–ª–µ–µ 30‚ÄØ–º–∏–Ω\n"
            "‚Äî –Ω–µ –æ—Ç–º–µ—á–∞–µ—Ç–µ –ø–æ—è–≤–ª–µ–Ω–∏—è –æ—Ç—ë–∫–æ–≤ —Å—É—Å—Ç–∞–≤–æ–≤, —Å–ª–∞–±–æ—Å—Ç–∏, –ø–æ—Ç–µ—Ä–∏ –∞–ø–ø–µ—Ç–∏—Ç–∞/–≤–µ—Å–∞\n"
            "‚Äî —É –í–∞—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–Ω–∞—á–∏–º–æ–µ –ø–æ–≤—ã—à–µ–Ω–∏–µ –º–∞—Ä–∫–µ—Ä–æ–≤ –≤–æ—Å–ø–∞–ª–µ–Ω–∏—è –≤ –∞–Ω–∞–ª–∏–∑–∞—Ö (–°–†–ë, –°–û–≠, —Ñ–∏–±—Ä–∏–Ω–æ–≥–µ–Ω)\n\n"
            "üîπ —Ç–æ —Å–∞–º–æ –ø–æ —Å–µ–±–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –ª–µ—á–µ–Ω–∏—è –∏–ª–∏ —Å—Ä–æ—á–Ω–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ —Ä–µ–≤–º–∞—Ç–æ–ª–æ–≥—É.\n"
            "üîπ –¢–∞–∫–∂–µ –Ω–µ —Å—Ç–æ–∏—Ç –∑–∞–±—ã–≤–∞—Ç—å, —á—Ç–æ –≤ –∫–ª–∏–Ω–∏—á–µ—Å–∫–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ –ø—Ä–∏ –≤—ã—è–≤–ª–µ–Ω–∏–∏ —Ä–µ–≤–º–∞—Ç–æ–∏–¥–Ω–æ–≥–æ —Ñ–∞–∫—Ç–æ—Ä–∞ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ —Ñ—Ä–∞–∫—Ü–∏—è IgM.\n"
            "üîπ –†–µ–≤–º–∞—Ç–æ–∏–¥–Ω—ã–π —Ñ–∞–∫—Ç–æ—Ä –ø–æ–≤—ã—à–µ–Ω —É 5‚Äì12% –∑–¥–æ—Ä–æ–≤—ã—Ö –ª—é–¥–µ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–æ–∑—Ä–∞—Å—Ç–∞ –∏ –Ω–µ –∏–≥—Ä–∞–µ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç–µ–ª—å–Ω–æ–π —Ä–æ–ª–∏ –≤ —Ä–∞–∑–≤–∏—Ç–∏–∏ –∞—É—Ç–æ–∏–º–º—É–Ω–Ω—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π.\n\n"
            "üëç –ï—Å–ª–∏ –í—ã –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç, –≤–≤–µ–¥–∏—Ç–µ ¬´–°–ø–∞—Å–∏–±–æ!¬ª\n"
            "üì¨ –ï—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ‚Äî ¬´–°–≤—è–∑–∞—Ç—å—Å—è —Å –¥–æ–∫—Ç–æ—Ä–æ–º¬ª, –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –í–∞–º –ø–æ–º–æ—á—å."
            )
        return

    keywords_anf = ["–ê–ù–§","–ø–æ–≤—ã—à–µ–Ω","–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π","–∞–Ω—Ç–∏–Ω—É–∫–ª–µ–∞—Ä–Ω—ã–π","ana"]
    if any(keyword.lower() in text for keyword in keywords_anf):
        await update.message.reply_text( 
            "üß™ –ü–æ–≤—ã—à–µ–Ω–Ω—ã–µ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –±–µ–∑ —Å–∏–º–ø—Ç–æ–º–æ–≤ ‚Äî —ç—Ç–æ –ù–ï –¥–∏–∞–≥–Ω–æ–∑\n\n"
            "‚òùÔ∏è–ü—Ä–∏–º–µ—Ä–Ω–æ —É 15‚Äì30% –ª—é–¥–µ–π ANA –º–æ–≥—É—Ç –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ –≤ –Ω–∏–∑–∫–∏—Ö —Ç–∏—Ç—Ä–∞—Ö (–Ω–∏–∂–µ 1:640), –±–µ–∑ –∫–∞–∫–∏—Ö-–ª–∏–±–æ —Å–∏–º–ø—Ç–æ–º–æ–≤ –∫–æ–ª–ª–∞–≥–µ–Ω–æ–∑–∞, –∏ –æ–Ω–∏ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∑–∞–±–æ–ª–µ—é—Ç –≤–æ–ª—á–∞–Ω–∫–æ–π.\n\n"
            "‚òùÔ∏è–¢–∞–∫–∂–µ –ø–æ–≤—ã—à–µ–Ω–∏–µ–º –ê–ù–§ –º–æ–∂–µ—Ç —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è –ª—é–±–æ–µ –∏–Ω—Ñ–µ–∫—Ü–∏–æ–Ω–Ω–æ–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–µ –∏–ª–∏ –¥—Ä—É–≥–æ–µ –∞—É—Ç–æ–∏–º–º—É–Ω–Ω–æ–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–µ –Ω–µ —Ä–µ–≤–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –ø—Ä–∏—Ä–æ–¥—ã (–∫ –ø—Ä–∏–º–µ—Ä—É, –∞—Ç–æ–ø–∏—á–µ—Å–∫–∏–π –¥–µ—Ä–º–∞—Ç–∏—Ç)\n\n"
            "ü©∫ –î–∏–∞–≥–Ω–æ–∑ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∫—Ä–∞—Å–Ω–æ–π –≤–æ–ª—á–∞–Ω–∫–∏ (–°–ö–í) —Å—Ç–∞–≤–∏—Ç—Å—è –ø–æ –∫–ª–∏–Ω–∏—á–µ—Å–∫–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º, –∫ –∫–æ—Ç–æ—Ä—ã–º –æ—Ç–Ω–æ—Å—è—Ç—Å—è:\n\n"
            "‚úÖ—Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–µ —Å–∏–º–ø—Ç–æ–º—ã:\n" 
            "‚Äî –¥–∏—Å–∫–æ–∏–¥–Ω–∞—è –≤–æ–ª—á–∞–Ω–∫–∞, —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—é—â–∞—è—Å—è –ø–æ—è–≤–ª–µ–Ω–∏–µ–º —Å—ã–ø–∏ (—Ç–∏–ø–∏—á–Ω–æ ‚Äî ‚Äú–±–∞–±–æ—á–∫–∞‚Äù –Ω–∞ –ª–∏—Ü–µ, –∏–ª–∏ –ø–æ—è–≤–ª–µ–Ω–∏–µ –ø—É–∑—ã—Ä—å–∫–æ–≤ –Ω–∞ —Ç–µ–ª–µ, –ø–æ—Ö–æ–∂–∏—Ö –Ω–∞ –≥–µ—Ä–ø–µ—Å), –∫–æ—Ç–æ—Ä–∞—è –æ—á–µ–Ω—å —Å–∏–ª—å–Ω–æ –±–µ—Å–ø–æ–∫–æ–∏—Ç –≤ —Å–≤—è–∑–∏ —Å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º –∂–∂–µ–Ω–∏–µ–º –∏ –∑—É–¥–æ–º, –∞ —Ç–∞–∫ –∂–µ –∏–º–µ–µ—Ç –æ—Ç—á—ë—Ç–ª–∏–≤—É—é —Ñ–æ—Ç–æ—á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å,\n" 
            "‚Äî –≥–Ω—ë–∑–¥–Ω–∞—è –∞–ª–ª–æ–ø–µ—Ü–∏—è\n" 
            "‚Äî –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —è–∑–≤ –≤–æ —Ä—Ç—É –∏–ª–∏ –Ω–æ—Å—É,\n" 
            "‚Äî –±–æ–ª—å –∏ –æ—Ç—ë—á–Ω–æ—Å—Ç—å –º–µ–ª–∫–∏—Ö –∏–ª–∏ –∫—Ä—É–ø–Ω—ã—Ö —Å—É—Å—Ç–∞–≤–æ–≤,\n" 
            "‚Äî —Å—Ç–æ–π–∫–∞—è –ª–∏—Ö–æ—Ä–∞–¥–∫–∞ (—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤—ã—à–µ 38¬∞C) –±–µ–∑ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –∏–Ω—Ñ–µ–∫—Ü–∏–∏,\n" 
            "‚Äî –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—Ä–æ–≤–∏ (–∞–Ω–µ–º–∏—è, –Ω–∏–∑–∫–∏–µ —Ç—Ä–æ–º–±–æ—Ü–∏—Ç—ã, –ª–µ–π–∫–æ–ø–µ–Ω–∏—è),\n" 
            "‚Äî –æ—Ç—ë–∫–∏ –ª–∏—Ü–∞ –∏ –Ω–∏–∂–Ω–∏—Ö –∫–æ–Ω–µ—á–Ω–æ—Å—Ç–µ–π –≤ —Å–æ—á–µ—Ç–∞–Ω–∏–∏ —Å –Ω–∞–±–æ—Ä–æ–º –≤–µ—Å–∞\n"
            "üß™ –ò–∑–º–µ–Ω–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤ –∫—Ä–æ–≤–∏ —Å:\n\n" 
            "- –≤—ã—Å–æ–∫–∏–º —Ç–∏—Ç—Ä–æ–º –ê–ù–§ (–æ–±—ã—á–Ω–æ ‚â•1:640) + –≤—ã—è–≤–ª–µ–Ω–∏–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –∞–Ω—Ç–∏—Ç–µ–ª–∞ –≤ –∏–º–º—É–Ω–æ–±–ª–æ—Ç–µ ENA: –∞–Ω—Ç–∏—Ç–µ–ª–∞ –∫ –¥–≤—É—Å–ø–∏—Ä–∞–ª—å–Ω–æ–π –î–ù–ö –∏/–∏–ª–∏ Sm-–∞–Ω—Ç–∏–≥–µ–Ω\n"
            "- –≤ —Å–ª—É—á–∞–µ –ø–æ—Ä–∞–∂–µ–Ω–∏—è –ø–æ—á–µ–∫- –ø–æ—è–≤–ª–µ–Ω–∏–µ –±–µ–ª–∫–∞ –≤ –º–æ—á–µ —Å–≤—ã—à–µ 300 –º–∏–ª–ª–∏–≥—Ä–∞–º–º–æ–≤ –≤ —Å—É—Ç–∫–∏\n"
            "üìå –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö —Å–∏–º–ø—Ç–æ–º–æ–≤ –Ω–µ—Ç, –∞ ANA –≤—ã—è–≤–ª–µ–Ω—ã ‚Äú–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π‚Äù ‚Äî —ç—Ç–æ –Ω–µ –ø–æ–≤–æ–¥ –¥–ª—è –ø–∞–Ω–∏–∫–∏, –ª–µ—á–µ–Ω–∏—è –∏–ª–∏ –¥–∞–∂–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫ —Ä–µ–≤–º–∞—Ç–æ–ª–æ–≥—É.\n" 
            "üìÜ –ú–æ–∂–Ω–æ –ø–µ—Ä–µ—Å–¥–∞—Ç—å –∞–Ω–∞–ª–∏–∑ —á–µ—Ä–µ–∑ 2-3 –º–µ—Å—è—Ü–∞ –¥–ª—è —Å–∞–º–æ—É—Å–ø–æ–∫–æ–µ–Ω–∏—è –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–±–ª—é–¥–∞—Ç—å –∑–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º.\n" 
            "üëç –ï—Å–ª–∏ –í—ã –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É \"–°–ø–∞—Å–∏–±–æ!\"\n"
            "üì¨ –ï—Å–ª–∏ —É –í–∞—Å –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã, –≤–≤–µ–¥–∏—Ç–µ ¬´–°–≤—è–∑–∞—Ç—å—Å—è —Å –¥–æ–∫—Ç–æ—Ä–æ–º¬ª, –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –í–∞–º –ø–æ–º–æ—á—å.\n" 
            )
        return

    keywords_mk = ["–ü–æ–≤—ã—à–µ–Ω–∞","–º–æ—á–µ–≤–∞—è","–∫–∏—Å–ª–æ—Ç–∞","–≤—ã—Å–æ–∫–∞—è",]
    if any(keyword.lower() in text for keyword in keywords_mk):
        await update.message.reply_text(
            "üß™–ü–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –º–æ—á–µ–≤–æ–π –∫–∏—Å–ª–æ—Ç—ã —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤—É–µ—Ç –æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏ –æ–±–º–µ–Ω–∞ —ç—Ç–æ–≥–æ —Ö–∏–º–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –≤ –∫—Ä–æ–≤–∏. –û–¥–Ω–∞–∫–æ —Å–∞–º–æ –ø–æ —Å–µ–±–µ –ø–æ–≤—ã—à–µ–Ω–∏–µ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ —Ä–∞–∑–≤–∏—Ç–∏—é –ø–æ–¥–∞–≥—Ä—ã.üß™–ü–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –º–æ—á–µ–≤–æ–π –∫–∏—Å–ª–æ—Ç—ã —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤—É–µ—Ç –æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏ –æ–±–º–µ–Ω–∞ —ç—Ç–æ–≥–æ —Ö–∏–º–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –≤ –∫—Ä–æ–≤–∏. –û–¥–Ω–∞–∫–æ —Å–∞–º–æ –ø–æ —Å–µ–±–µ –ø–æ–≤—ã—à–µ–Ω–∏–µ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ —Ä–∞–∑–≤–∏—Ç–∏—é –ø–æ–¥–∞–≥—Ä—ã.\n"
            "‚úÖ –í–∞–∂–Ω—ã–π –º–æ–º–µ–Ω—Ç:\n\n"
            "–ü–æ–¥–∞–≥—Ä–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –Ω–µ –≤ —Å–ª–µ–¥—Å—Ç–≤–∏–µ –ø–æ–≤—ã—à–µ–Ω–∏–µ –º–æ—á–µ–≤–æ–π –∫–∏—Å–ª–æ—Ç—ã, –∞ –≤ —Å–ª–µ–¥—Å—Ç–≤–∏–µ –¥–µ—Ñ–µ–∫—Ç–∞ –≤ —Ä–∞–±–æ—Ç–µ —Ñ–µ—Ä–º–µ–Ω—Ç–∞ –∫—Å–∞–Ω—Ç–∏–Ω–æ–∫—Å–∏–¥–∞–∑—ã, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–∞ –∑–∞ –≤—ã–≤–µ–¥–µ–Ω–∏–µ –º–æ—á–µ–≤–æ–π –∫–∏—Å–ª–æ—Ç—ã –∏–∑ —Ç–∫–∞–Ω–µ–π. –î–ª—è –ø—Ä–∏–º–µ—Ä–∞, —É –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –Ω–∞ –≥–µ–º–æ–¥–∏–∞–ª–∏–∑–µ —á–∞—Å—Ç–æ –º–æ—á–µ–≤–∞—è –∫–∏—Å–ª–æ—Ç—ã –ø—Ä–µ–≤—ã—à–∞–µ—Ç –Ω–æ—Ä–º—É –≤ –¥–µ—Å—è—Ç–∫–∏ —Ä–∞–∑, –ø—Ä–∏ —ç—Ç–æ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã—Ö —Å–∏–º–ø—Ç–æ–º–æ–≤ –æ–Ω–∏ –Ω–µ –∏—Å–ø—ã—Ç—ã–≤–∞—é—Ç.\n"
            "‚úÖ –ï—Å–ª–∏ –≤—ã:\n"
            "‚Äî –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø—ã—Ç—ã–≤–∞–ª–∏ –ø—Ä–∏—Å—Ç—É–ø–æ–≤ –ø–æ–¥–∞–≥—Ä—ã —Å —Ä–µ–∑–∫–æ —Ä–∞–∑–≤–∏–≤—à–∏–º—Å—è –æ—Ç—ë–∫–æ–º, –ø–æ–∫—Ä–∞—Å–Ω–µ–Ω–∏–µ–º –∏ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–º–∏ –±–æ–ª—è–º–∏ –≤ –æ–¥–Ω–æ–º –∏–∑ —Å—É—Å—Ç–∞–≤–æ–≤ —Ç–µ–ª–∞, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ —Å—É—Å—Ç–∞–≤–µ –æ—Å–Ω–æ–≤–∞–Ω–∏—è –±–æ–ª—å—à–æ–≥–æ –ø–∞–ª—å—Ü–∞ –Ω–æ–≥–∏\n"
            "‚Äî –Ω–µ —Å—Ç–∞–ª–∫–∏–≤–∞–ª–∏—Å—å —Å –ø–æ—è–≤–ª–µ–Ω–∏–µ–º –ø–ª–æ—Ç–Ω—ã—Ö –±–µ–ª–æ–≤–∞—Ç—ã—Ö –±—É–≥–æ—Ä–∫–æ–≤ –≤–Ω—É—Ç—Ä–∏ –∫–æ–∂–Ω—ã—Ö –ø–æ–∫—Ä–æ–≤–æ–≤, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã—Ö, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, —Å—É—Å—Ç–∞–≤–∞—Ö\n"
            "‚Äî –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –≤–æ—Å–ø–∞–ª–µ–Ω–∏—è –ø–æ –æ–±—â–∏–º –∞–Ω–∞–ª–∏–∑–∞–º\n"
            "‚Äî –Ω–µ —Å—Ç–∞–ª–∫–∏–≤–∞–ª–∏—Å—å —Å –ø–æ—è–≤–ª–µ–Ω–∏–µ–º –ø–ª–æ—Ç–Ω—ã—Ö –±–µ–ª–æ–≤–∞—Ç—ã—Ö –±—É–≥–æ—Ä–∫–æ–≤ –≤–Ω—É—Ç—Ä–∏ –∫–æ–∂–Ω—ã—Ö –ø–æ–∫—Ä–æ–≤–æ–≤, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã—Ö, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, —Å—É—Å—Ç–∞–≤–∞—Ö\n"
            "‚Äî –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –≤–æ—Å–ø–∞–ª–µ–Ω–∏—è –ø–æ –æ–±—â–∏–º –∞–Ω–∞–ª–∏–∑–∞–º\n"
            "üîπ —Ç–æ —Å–∞–º–æ –ø–æ —Å–µ–±–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç–æ–∑–Ω–æ–π –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 9 –º–≥/–¥–ª —É –∂–µ–Ω—â–∏–Ω –∏ 10 –º–≥/–¥–ª —É –º—É–∂—á–∏–Ω.\n"
            "üîπ–¢–µ–º –Ω–µ –º–µ–Ω–µ–µ, —Å–ª–µ–¥—É–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –ø—É—Ä–∏–Ω–æ–≤—ã—Ö –æ—Å–Ω–æ–≤–∞–Ω–∏–π –≤ –ø–∏—â–µ –∏ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –∞–ª–∫–æ–≥–æ–ª—è.\n" 
            "‚ö†Ô∏è–ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –∑–∞ –ø–æ–≤—ã—à–µ–Ω–∏–µ–º –º–æ—á–µ–≤–æ–π –∫–∏—Å–ª–æ—Ç—ã, –¥–∞–∂–µ –±–µ–∑ —Å–∏–º–ø—Ç–æ–º–æ–≤, –º–æ–∂–µ—Ç —Å—Ç–æ—è—Ç—å –Ω–∞—á–∞–ª–æ —Ä–∞–∑–≤–∏—Ç–∏—è –º–µ—Ç–∞–±–æ–ª–∏—á–µ—Å–∫–æ–≥–æ —Å–∏–Ω–¥—Ä–æ–º–∞ —Å –∫—É–¥–∞ –±–æ–ª–µ–µ —Å–µ—Ä—å—ë–∑–Ω—ã–º –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è–º–∏ –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –æ—Ä–≥–∞–Ω–æ–≤.\n" 
            "üëç–ï—Å–ª–∏ –í—ã –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É \"–°–ø–∞—Å–∏–±–æ!\"\n" 
            "üì¨ –ï—Å–ª–∏ –≤ –í–∞—à–µ–º —Å–ª—É—á–∞–µ –ø–æ–≤—ã—à–µ–Ω–∏–µ –º–æ—á–µ–≤–æ–π –∫–∏—Å–ª–æ—Ç—ã —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ—Ç—Å—è —Å–∏–º–ø—Ç–æ–º–∞–º–∏, –≤–≤–µ–¥–∏—Ç–µ ¬´–°–≤—è–∑–∞—Ç—å—Å—è —Å –¥–æ–∫—Ç–æ—Ä–æ–º¬ª, –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –≤–∞–º –ø–æ–º–æ—á—å.\n" 
    )    
        return

    keywords_but = ["—Å—ã–ø—å","–±–∞–±–æ—á–∫–∞","–≤ —Ñ–æ—Ä–º–µ –±–∞–±–æ—á–∫–∏","–Ω–∞ –ª–∏—Ü–µ","–¥–∏—Å–∫–æ–∏–¥–Ω–∞—è –≤–æ–ª—á–∞–Ω–∫–∞"]
    if any(keyword.lower() in text for keyword in keywords_but):
        await update.message.reply_text(
            "üò≥–°—ã–ø—å –≤ —Ñ–æ—Ä–º–µ –±–∞–±–æ—á–∫–∏ –Ω–∞ –ª–∏—Ü–µ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–∑–Ω–∞—á–∞–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∫—Ä–∞—Å–Ω–æ–π –≤–æ–ª—á–∞–Ω–∫–∏.\n"
            "–ï—Å–ª–∏ –≥–æ–≤–æ—Ä–∏—Ç—å –æ —Ä–µ–≤–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è—Ö, —Ç–æ —Ç–∞–∫–∞—è —Å—ã–ø—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω–∞ –¥–ª—è –¥–∏—Å–∫–æ–∏–¥–Ω–æ–π –≤–æ–ª—á–∞–Ω–∫–∏. –≠—Ç–æ –Ω–µ —Å–∏–Ω–æ–Ω–∏–º —Å–∏—Å—Ç–µ–º–Ω–æ–π –∫—Ä–∞—Å–Ω–æ–π –≤–æ–ª—á–∞–Ω–∫–∏, —Ö–æ—Ç—è –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑ –µ—ë —Å–∏–º–ø—Ç–æ–º–æ–≤.\n" 
            "‚òùÔ∏è–í —ç—Ç–æ–º —Å–ª—É—á–∞–µ —Å—ã–ø—å:\n\n"
            "- –ø–æ–º–∏–º–æ –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏—á–∏–Ω—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ñ–∏–∑–∏—á–µ—Å–∫–∏–π –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç, –ø–æ—Å–∫–æ–ª—å–∫—É –≤—ã–∑—ã–≤–∞–µ—Ç –±–æ–ª–∏ –∏ –∂–∂–µ–Ω–∏–µ\n"
            "- —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ—Ç—Å—è –ø–æ—è–≤–ª–µ–Ω–∏–µ–º —à–µ–ª—É—à–µ–Ω–∏—è, –∫–∞–∫ –ø—Ä–∏ –ø—Å–æ—Ä–∏–∞–∑–µ, –∏–ª–∏ –ø–æ—è–≤–ª–µ–Ω–∏–µ–º –≤–æ–ª–¥—ã—Ä–µ–π –Ω–∞ –ø–æ–¥–æ–±–∏–µ –≥–µ—Ä–ø–µ—Å–∞, –∫–æ—Ç–æ—Ä—ã–µ –æ—Å—Ç–∞–≤–ª—è—é—Ç –ø–æ—Å–ª–µ —Å–µ–±—è —Ä—É–±—Ü—ã\n"
            "- –∏–º–µ–µ—Ç —á—ë—Ç–∫—É—é —Å–≤—è–∑—å —Å —Ñ–æ—Ç–æ—Å–µ–Ω—Å–∏–±–∏–ª–∏–∑–∞—Ü–∏–µ–π\n"
            "–ß–∞—â–µ –≤—Å–µ–≥–æ —Å—ã–ø—å —Å–≤—è–∑–∞–Ω–∞ —Å –¥—Ä—É–≥–∏–º –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–µ–º, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ä–æ–∑–∞—Ü–µ–∞.\n" 
            "üîé–î–ª—è –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∫–∏ —Å—ã–ø—å —Å–ª–µ–¥—É–µ—Ç –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –¥–µ—Ä–º–∞—Ç–æ–ª–æ–≥—É. –ï—Å–ª–∏ –¥–∏–∞–≥–Ω–æ–∑ –¥–∏—Å–∫–æ–∏–¥–Ω–æ–π –≤–æ–ª—á–∞–Ω–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—Å—è —Å–ª–µ–¥—É–µ—Ç –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Ä–µ–≤–º–∞—Ç–æ–ª–æ–≥—É –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º.\n"
            "üëç–ï—Å–ª–∏ –í—ã –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É \"–°–ø–∞—Å–∏–±–æ!\"\n"
            "üì¨ –ï—Å–ª–∏ —É –í–∞—Å –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã, –≤–≤–µ–¥–∏—Ç–µ ¬´–°–≤—è–∑–∞—Ç—å—Å—è —Å –¥–æ–∫—Ç–æ—Ä–æ–º¬ª, –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –í–∞–º –ø–æ–º–æ—á—å.\n" 
    )    
        return

    keywords_vas = ["—Å—ã–ø—å –Ω–∞ —Ç–µ–ª–µ","–≤–∞—Å–∫—É–ª–∏—Ç","–∫–æ–∂–Ω—ã–π","–ø–µ—Ç–µ—Ö–∏–∏","–ø–µ—Ç–µ—Ö–∏–∞–ª—å–Ω–∞—è"]
    if any(keyword.lower() in text for keyword in keywords_vas):
        await update.message.reply_text(
            "ü§ì–í–∞—Å–∫—É–ª–∏—Ç - —ç—Ç–æ –≤–æ—Å–ø–∞–ª–µ–Ω–∏–µ —Å–æ—Å—É–¥–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–∞–∫–∏–º-–ª–∏–±–æ –ø—Ä–æ–≤–æ—Ü–∏—Ä—É—é—â–∏–º —Ñ–∞–∫—Ç–æ—Ä–æ–º, –±—É–¥—å —Ç–æ –ø–æ–ø–∞–¥–∞–Ω–∏–µ –≤ –æ—Ä–≥–∞–Ω–∏–∑–º –∞–ª–ª–µ—Ä–≥–µ–Ω–∞ –∏–ª–∏ —É–∫—É—Å –Ω–∞—Å–µ–∫–æ–º–æ–≥–æ —Å –ø–æ—è–≤–ª–µ–Ω–∏–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω–æ–π –ø–∞–ø—É–ª—ã—é.\n"
            "–í –ø–æ–¥–∞–≤–ª—è—é—â–µ–º –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Å–ª—É—á–∞–µ–≤, –µ—Å–ª–∏ –í—ã —Å–ª—ã—à–∏—Ç–µ –¥–∏–∞–≥–Ω–æ–∑ ¬´–í–∞—Å–∫—É–ª–∏—Ç¬ª - —Ä–µ—á—å –∏–¥—ë—Ç –æ –±–µ–∑–æ–±–∏–¥–Ω–æ–º –∫–æ–∂–Ω–æ–º –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–∏, –ª–µ—á–µ–Ω–∏–µ–º –∫–æ—Ç–æ—Ä–æ–≥–æ –∑–∞–Ω–∏–º–∞—é—Ç—Å—è –¥–µ—Ä–º–∞—Ç–æ–ª–æ–≥–∏.\n"
            "ü©∫–†–µ–≤–º–∞—Ç–æ–ª–æ–≥–∏—è –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –ª–µ—á–µ–Ω–∏–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –≤–∞—Å–∫—É–ª–∏—Ç–æ–≤. –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –≤–æ—Å–ø–∞–ª–∏—Ç–µ–ª—å–Ω—ã–π –∫–∞—Å–∫–∞–¥ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –∞–Ω—Ç–∏—Ç–µ–ª–∞–º–∏, —á—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –≥–µ–Ω–µ—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–º—É –≤–æ—Å–ø–∞–ª–µ–Ω–∏—é —Å–æ—Å—É–¥–æ–≤ –ø–æ –≤—Å–µ–º—É –æ—Ä–≥–∞–Ω–∏–∑–º—É, –∏, –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å –æ—Ä–≥–∞–Ω–æ–≤, –æ–±–∏–ª—å–Ω–æ –≤–∞—Å–∫—É–ª—è—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: –ª—ë–≥–∫–∏–µ, –ø–æ—á–∫–∏, –∫–∏—à–µ—á–Ω–∏–∫ –∏ –∫–æ–∂–∞.\n"
            "–í –æ—Ç–ª–∏—á–∏–µ –æ—Ç —Å—É–≥—É–±–æ –∫–æ–∂–Ω—ã—Ö —Ñ–æ—Ä–º –≤–∞—Å–∫—É–ª–∏—Ç–æ–≤, —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∏–º–µ—é—Ç –æ–±—à–∏—Ä–Ω—É—é —è—Ä–∫—É—é –∫–ª–∏–Ω–∏—á–µ—Å–∫—É—é –∫–∞—Ä—Ç–∏–Ω—É —Å –ø–æ—è–≤–ª–µ–Ω–∏–µ–º —Å–∏—Å—Ç–µ–º–Ω–æ–π –≤–æ—Å–ø–∞–ª–∏—Ç–µ–ª—å–Ω–æ–π —Ä–µ–∞–∫—Ü–∏–∏ –≤ –∫—Ä–æ–≤–∏ –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –¥—Ä—É–≥–∏—Ö —Å–∏–º–ø—Ç–æ–º–æ–≤. –ß—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, —Å—ã–ø—å –ø–æ—è–≤–ª—è–µ—Ç—Å—è –Ω–∞ –¥–æ–≤–æ–ª—å–Ω–æ –ø–æ–∑–¥–Ω–∏—Ö —Å—Ç–∞–¥–∏—è—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –∏ –æ—á–µ–Ω—å –æ–±—à–∏—Ä–Ω–∞—è.\n" 
            "üîé–ï—Å–ª–∏ –í—ã —É —Å–µ–±—è, –∏–ª–∏ —É —Ä–µ–±—ë–Ω–∫–∞, –Ω–∞—à–ª–∏ –ø–∞—Ä—É –∫—Ä–∞—Å–Ω—ã—Ö —Ç–æ—á–µ–∫, –∫–æ—Ç–æ—Ä—ã–µ –±–µ–∑ –ª—É–ø—ã —Ä–∞–∑–≥–ª—è–¥–µ—Ç—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ - —ç—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –Ω–µ —Å–∏—Å—Ç–µ–º–Ω—ã–π –≤–∞—Å–∫—É–ª–∏—Ç –∏ –¥–∞–ª—å–Ω–µ–π—à–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è. –í—ã –º–æ–∂–µ—Ç–µ —Ç–∞–∫–∂–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –¥–µ—Ä–º–∞—Ç–æ–ª–æ–≥—É –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å—ã–ø–∏\n" 
            "üì¨–ï—Å–ª–∏ –∂–µ –í–∞–º –ø–æ—Å—Ç–∞–≤–ª–µ–Ω –¥–∏–∞–≥–Ω–æ–∑ ¬´–°–∏—Å—Ç–µ–º–Ω—ã–π –≤–∞—Å–∫—É–ª–∏—Ç¬ª –∏–ª–∏ –ø–æ–º–∏–º–æ —Å—ã–ø–∏ –∏–º–µ—é—Ç –º–µ—Å—Ç–æ –¥—Ä—É–≥–∏–µ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏–º–ø—Ç–æ–º—ã, –≤–≤–µ–¥–∏—Ç–µ ¬´–°–≤—è–∑–∞—Ç—å—Å—è —Å –¥–æ–∫—Ç–æ—Ä–æ–º¬ª, –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –í–∞–º –ø–æ–º–æ—á—å.\n" 
            "üëç–ï—Å–ª–∏ –í—ã –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É \"–°–ø–∞—Å–∏–±–æ!\"\n" 
    )    
        return

    keywords_jia = ["—é—Ä–∞","—é–∏–∞","—É –¥–µ—Ç–µ–π","—é–≤–∏–Ω–∏–ª—å–Ω—ã–π","–∞—Ä—Ç—Ä–∏—Ç"]
    if any(keyword.lower() in text for keyword in keywords_jia):
        await update.message.reply_text(
            "üë¶üèª –Æ–≤–µ–Ω–∏–ª—å–Ω—ã–π –∏–¥–µ–æ–ø–∞—Ç–∏—á–µ—Å–∫–∏–π –∞—Ä—Ç—Ä–∏—Ç (–Æ–ò–ê) - —ç—Ç–æ —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–æ–µ –≤–æ—Å–ø–∞–ª–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–µ —Å—É—Å—Ç–∞–≤–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è —É –¥–µ—Ç–µ–π –∏ –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤ –≤ –≤–æ–∑—Ä–∞—Å—Ç–µ –¥–æ 16 –ª–µ—Ç. –ü–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ - —ç—Ç–æ —Å–∞–º–æ–µ —á–∞—Å—Ç–æ–µ –ø–æ—Å–ª–µ —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∞—Ä—Ç—Ä–∏—Ç–∞ —Ä–µ–≤–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–µ —É –¥–µ—Ç–µ–π.\n\n"
            "üë¶üèæ –£ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ä–º —Ç–µ—á–µ–Ω–∏—è:\n\n"
            "üîπ —é–≤–µ–Ω–∏–ª—å–Ω—ã–π –∏–¥–µ–æ–ø–∞—Ç–∏—á–µ—Å–∫–∏–π –æ–ª–∏–≥–æ–∞—Ä—Ç—Ä–∏—Ç (–ø–æ—Ä–∞–∂–µ–Ω–∏–µ –º–µ–Ω–µ–µ 4 —Å—É—Å—Ç–∞–≤–æ–≤)\n"
            "üîπ –†–§-–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π —é–≤–µ–Ω–∏–ª—å–Ω—ã–π –ø–æ–ª–∏–∞—Ä—Ç—Ä–∏—Ç (–ø–æ—Ä–∞–∂–µ–Ω–∏–µ 5 –∏ –±–æ–ª–µ–µ —Å—É—Å—Ç–∞–≤–æ–≤)\n"
            "üîπ –†–§-–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π —é–≤–µ–Ω–∏–ª—å–Ω—ã–π –ø–æ–ª–∏–∞—Ä—Ç—Ä–∏—Ç\n"
            "üîπ —Å–∏—Å—Ç–µ–º–Ω—ã–π —é–≤–µ–Ω–∏–ª—å–Ω—ã–π –∏–¥–µ–æ–ø–∞—Ç–∏—á–µ—Å–∫–∏–π –∞—Ä—Ç—Ä–∏—Ç - –±–æ–ª–µ–∑–Ω—å –°—Ç–∏–ª–ª–∞\n"
            "üîπ —é–≤–µ–Ω–∏–ª—å–Ω—ã–π –ø—Å–æ—Ä–∏–∞—Ç–∏—á–µ—Å–∫–∏–π –∞—Ä—Ç—Ä–∏—Ç\n"
            "üîπ –∞—Ä—Ç—Ä–∏—Ç, –∞—Å—Å–æ—Ü–∏–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å —ç–Ω—Ç–µ–∑–∏—Ç–∞–º–∏ - –ø–æ —Å—É—Ç–∏, —ç—Ç–æ –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞—Ü–∏—è –±–æ–ª–µ–∑–Ω–∏ –ë–µ—Ö—Ç–µ—Ä–µ–≤–∞ –≤ –¥–µ—Ç—Å–∫–æ–º –≤–æ–∑—Ä–∞—Å—Ç–µ.\n\n"
            "üò® –ß–∞—â–µ –≤—Å–µ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª–∏ –æ–±—Ä–∞—â–∞—é—Ç—Å—è —Å –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–µ–º –∏–º–µ–Ω–Ω–æ –Ω–∞ –ø–µ—Ä–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç. –ö–∞–∫ –∏ —É –ª—é–±–æ–≥–æ –¥—Ä—É–≥–æ–≥–æ —Ä–µ–≤–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–µ, –∑–¥–µ—Å—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ä—è–¥ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –ø–æ—Å—Ç–∞–≤–Ω–æ–≤–∫–∏ –¥–∏–∞–≥–Ω–æ–∑–∞:\n"
            "‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∂–∞–ª–æ–± –±–æ–ª–µ–µ 6 –Ω–µ–¥–µ–ª—å. –ò —ç—Ç–æ —Å–∞–º—ã–π –≤–∞–∂–Ω—ã–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π –∫—Ä–∏—Ç–µ—Ä–∏–π. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –¥–∏–∞–≥–Ω–æ–∑ –Æ—Ä–ê —Ä–µ–±—ë–Ω–∫—É, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏ –ø–µ—Ä–µ–æ–¥–∏—á–µ—Å–∫–∏–π –±–µ—Å–ø–æ–∫–æ–∏—Ç –±–æ–ª—å –∏ –æ—Ç—ë—á–Ω–æ—Å—Ç—å –≤ –æ–¥–Ω–æ–∏ –¥–∞–∂–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å—É—Å—Ç–∞–≤–∞—Ö\n"
            "‚úÖ –ù–∞—á–∞–ª–æ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –¥–æ 18-—Ç–∏ –ª–µ—Ç–Ω–µ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞\n"
            "‚úÖ –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –¥—Ä—É–≥–∏—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π, –ø—Ä–æ—Ç–µ–∫–∞—é—â–∏—Ö —Å —Å—É—Å—Ç–∞–≤–Ω—ã–º —Å–∏–Ω–¥—Ä–æ–º–æ–º\n\n"
            "–î–ª—è –∫–∞–∂–¥–æ–π –∏–∑ —Ñ–æ—Ä–º —Ç–µ—á–µ–Ω–∏—è –µ—Å—Ç—å –∏ —Å–≤–æ–∏ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏.\n\n"
            "üß™ –£ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –º–∞—Ä–∫–µ—Ä–æ–≤. –î–∞–∂–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –ê–ù–§ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Ç—Å—Ç–≤–æ–º –¥–∏–∞–≥–Ω–æ–∑–∞. –ü—Ä–∏ –¥–æ–∫–∞–∑–∞–Ω–Ω–æ–º –Æ–ò–ê - —ç—Ç–æ —Ñ–∞–∫—Ç–æ—Ä —Ä–∏—Å–∫–∞ —Ä–∞–∑–≤–∏—Ç–∏—è —É–≤–µ–∏—Ç–∞, –Ω–æ –Ω–µ –ø—Ä–∞–≤–∏–ª–æ.\n\n"
            "ü§± –î–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ –ø–æ–Ω–∏–º–∞—Ç—å, —á—Ç–æ –Ω–µ –∫–∞–∂–¥—ã–π –∞—Ä—Ç—Ä–∏—Ç —É —Ä–µ–±—ë–Ω–∫–∞ –æ–∑–Ω–∞—á–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Æ–ò–ê. –í –ø–æ–¥–∞–≤–ª—è—é—â–µ–º –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Å–ª—É—á–∞–µ–≤ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —Ä–µ–∞–∫—Ç–∏–≤–Ω—ã–π –∞—Ä—Ç—Ä–∏—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ—Ö–æ–¥–∏—Ç —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ. –î–∞–∂–µ –µ—Å–ª–∏ —É —Ä–µ–±—ë–Ω–∫–∞ –≤—ã—è–≤–ª–µ–Ω –Æ–ò–ê, —Ç–µ—Ä–∞–ø–∏—è –ø–µ—Ä–≤–æ–π –ª–∏–Ω–∏–∏ - —ç—Ç–æ –≤—Å–µ–≥–¥–∞ –ù–ü–í–° –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏. –ó–∞—á–∞—Å—Ç—É—é —Ç–∞–∫–æ–π —Ç–µ—Ä–∞–ø–∏–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è\n\n"
            "‚ö†Ô∏è–°–∞–º–∞—è —á–∞—Å—Ç–∞—è –æ—à–∏–±–∫–∞ —Ä–æ–¥–∏—Ç–µ–ª–µ–π - —ç—Ç–æ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∏ –ª–µ—á–µ–Ω–∏—è –ù–ü–í–° –ø—Ä–∏ —Å–ª–∞–±–æ–π –∫–ª–∏–Ω–∏—á–µ—Å–∫–æ–π –∫–∞—Ä—Ç–∏–Ω–µ, –∫–∞–∫ –ø–æ—Ç–µ—Ä–∏ –≤—Ä–µ–º–µ–Ω–∏. –ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ, —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤ –±–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–π —Ç–µ—Ä–∞–ø–∏–∏ –Ω–∞ –¥–∞–Ω–Ω–æ–º —ç—Ç–∞–ø–µ. –ó–¥–µ—Å—å —Å–ª–µ–¥—É–µ—Ç –≤—Å–ø–æ–º–Ω–∏—Ç—å —Å–ª–æ–≤–∞ –≤–µ–ª–∏–∫–æ–≥–æ —Ä—É—Å—Å–∫–æ–≥–æ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∞ –°–µ—Ä–≥–µ—è –ü–∞–≤–ª–æ–≤–∏—á–∞ –ë–æ—Ç–∫–∏–Ω–∞: ¬´–õ–µ—á–∏ –±–æ–ª—å–Ω–æ–≥–æ –∞ –Ω–µ –±–æ–ª–µ–∑–Ω—å!¬ª. –ï—Å–ª–∏ —Ä–µ–±—ë–Ω–æ–∫ –∞–∫—Ç–∏–≤–µ–Ω, –Ω–µ –∏–º–µ–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ —Å—É—Å—Ç–∞–≤–æ–≤ –≤ –≤–∏–¥–µ —Ö—Ä–æ–º–∞—Ç—ã –∏–ª–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É—Ä—ã, –Ω–µ –∂–∞–ª—É–µ—Ç—Å—è –Ω–∞ —É–ø–æ—Ä–Ω—ã–µ –±–æ–ª–∏, –∞ –≤ —Å–ª—É—á–∞–µ –∏—Ö –ø–æ—è–≤–ª–µ–Ω–∏—è –µ–º—É –ø–æ–º–æ–≥–∞—é—Ç –ù–ü–í–°, —Ç–æ –Ω–µ—Ç –ø–æ–≤–æ–¥–∞ –¥–ª—è –ø–∞–Ω–∏–∫–∏ –∏ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–π —Ç–µ—Ä–∞–ø–∏–∏. –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ - —ç—Ç–æ –∏ –ø—Ä–∞–≤–¥–∞ –ª—É—á—à–µ–µ, —á—Ç–æ –í—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –¥–ª—è —Ä–µ–±—ë–Ω–∫–∞\n\n"
            "–ú–µ—Ç–æ—Ç—Ä–µ–∫—Å–∞—Ç –∏ –¥—Ä—É–≥–∏–µ –∏–º–º—É–Ω–æ—Å—É–ø—Ä–µ—Å—Å–∞–Ω—Ç—ã –Ω–∞–∑–Ω–∞—á–∞—é—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —è—Ä–∫–æ–π –∫–ª–∏–Ω–∏—á–µ—Å–∫–æ–π –∫–∞—Ä—Ç–∏–Ω–µ, –≤—ã—Ä–∞–∂–µ–Ω–Ω–æ–º —Å–∏—Å—Ç–µ–º–Ω–æ–º –≤–æ—Å–ø–∞–ª–µ–Ω–∏–∏ –∏ –ø–æ—Ä–∞–∂–µ–Ω–∏–∏ –≥–ª–∞–∑ (—É–≤–µ–∏—Ç). –ù–∏ –Ω–∞–ª–∏—á–∏–µ –≤–∏–∑—É–∞–ª—å–Ω–æ–π –æ—Ç—á—ë–Ω–æ—Å—Ç–∏, –Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –£–ó–ò-–æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –Ω–µ —è–≤–ª—è—é—Ç—Å—è –ø–æ–∫–∞–∑–∞–Ω–∏–µ–º –∫ —ç—Å–∫–∞–ª–∞—Ü–∏–∏ –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç–æ–∑–Ω–æ–π —Ç–µ—Ä–∞–ø–∏–∏\n\n"
            "üëç –ï—Å–ª–∏ –í—ã –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É ¬´–°–ø–∞—Å–∏–±–æ!¬ª\n\n"
            "üì¨ –ï—Å–ª–∏ —É –í–∞—Å –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã, –≤–≤–µ–¥–∏—Ç–µ ¬´–°–≤—è–∑–∞—Ç—å—Å—è —Å –¥–æ–∫—Ç–æ—Ä–æ–º¬ª, –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –í–∞–º –ø–æ–º–æ—á—å."
        )
        return

    keywords_sj = ["—Å—É—Ö–æ—Å—Ç—å","–≥–ª–∞–∑","—Ä—Ç–∞","—à–µ–≥—Ä–µ–Ω","—Å–∏–Ω–¥—Ä–æ–º —à–µ–≥—Ä–µ–Ω–∞"]
    if any(keyword.lower() in text for keyword in keywords_sj):
        await update.message.reply_text(
        "üåµ –°—É—Ö–æ—Å—Ç—å –≥–ª–∞–∑ –∏–ª–∏ —Ä—Ç–∞ –Ω–µ —è–≤–ª—è—é—Ç—Å—è —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–º–∏ –¥–ª—è —Å–∏–Ω–¥—Ä–æ–º–∞ –®–µ–≥—Ä–µ–Ω–∞ –ø—Ä–∏–∑–Ω–∞–∫–∞–º–∏.\n\n"
        "–û–¥–Ω–∞ –∏–∑ —Å–∞–º—ã—Ö —á–∞—Å—Ç—ã—Ö –ø—Ä–∏—á–∏–Ω —Å—É—Ö–æ—Å—Ç–∏ –≥–ª–∞–∑ - –¥–µ—Ñ–∏—Ü–∏—Ç –≤–∏—Ç–∞–º–∏–Ω–∞ –ê. –ï—Å–ª–∏ —É –í–∞—Å –≤ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ —Å—É—Ö–æ—Å—Ç–∏ –≥–ª–∞–∑–∞ –æ—Ç–º–µ—á–∞–µ—Ç—Å—è —Å–Ω–∏–∂–µ–Ω–∏–µ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –∫ —Ç–µ–º–Ω–æ—Ç–µ - —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –ø—Ä–∏—á–∏–Ω–∞ –∏–º–µ–Ω–Ω–æ –≤ —ç—Ç–æ–º.\n\n"
        "–¢–∞–∫–∂–µ —Å—É—Ö–æ—Å—Ç—å –≥–ª–∞–∑–∞ –º–æ–≥—É—Ç –≤—ã–∑—ã–≤–∞—Ç—å:\n\n"
        "‚Äî —ç–∫—Ä–∞–Ω—ã, –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä—ã, –ª–∏–Ω–∑—ã\n"
        "‚Äî –ª–µ–∫–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã (–∞–Ω—Ç–∏–¥–µ–ø—Ä–µ—Å—Å–∞–Ω—Ç—ã, –∞–Ω—Ç–∏–≥–∏—Å—Ç–∞–º–∏–Ω–Ω—ã–µ, –±–µ—Ç–∞-–±–ª–æ–∫–∞—Ç–æ—Ä—ã –∏ –¥—Ä.)\n"
        "‚Äî –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è\n"
        "‚Äî –≥–æ—Ä–º–æ–Ω–∞–ª—å–Ω—ã–π –¥–∏—Å–±–∞–ª–∞–Ω—Å\n\n"
    "–î–∏–∞–≥–Ω–æ–∑ ¬´–°–∏–Ω–¥—Ä–æ–º –®–µ–≥—Ä–µ–Ω–∞¬ª —Å—Ç–∞–≤–∏—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ —Å–ª–µ–¥—É—é—â–∏—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤:\n\n"
    "‚úÖ–æ–±—ä–µ–∫—Ç–∏–≤–Ω–æ –¥–æ–∫–∞–∑–∞–Ω–Ω–∞—è —Å—É—Ö–æ—Å—Ç—å —Å–ª–∏–∑–∏—Å—Ç—ã—Ö –æ–±–æ–ª–æ—á–µ–∫. –° —ç—Ç–æ–π —Ü–µ–ª—å—é –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–µ—Å—Ç –®–∏—Ä–º–µ—Ä–∞ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ —Å–ª—ë–∑–æ–ø—Ä–æ–¥—É–∫—Ü–∏–∏, –∞ —Ç–∞–∫ –∂–µ —Ç–µ—Å—Ç –°–∞–∫—Å—Ç–æ–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤ –¥–æ–º–∞—à–Ω–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫—É—Ö–æ–Ω–Ω—ã—Ö –≤–µ—Å–æ–≤ –∏ –º–∞—Ä–ª–∏–µ–≤–æ–π —Å–∞–ª—Ñ–µ—Ç–∫–∏. –ó–∞ –∫–∞–∂–¥—ã–π –∏–∑ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –¥–∞—ë—Ç—Å—è –ø–æ –æ–¥–Ω–æ–º—É –ø—É–Ω–∫—Ç—É\n"
    "‚úÖ–≤—ã—è–≤–ª–µ–Ω–∏–µ –∞–Ω—Ç–∏—Ç–µ–ª –∫ SSA (Ro) –∏/–∏–ª–∏ SSB (La) –≤ —Å–æ—á–µ—Ç–∞–Ω–∏–∏ —Å –≤—ã—Å–æ–∫–∏–º —Ç–∏—Ç—Ä–æ–º –ê–ù–§ (3 –ø—É–Ω—Ç–∫–∞)\n"
    "‚úÖ–Ω–∞–ª–∏—á–∏–µ –≤ –±–∏–æ–ø—Å–∏–∏ —Å–ª—é–Ω–Ω–æ–π –∂–µ–ª–µ–∑—ã –æ—á–∞–≥–∞ –ª–µ–π–∫–æ—Ü–∏—Ç–∞—Ä–Ω–æ–π –∏–Ω—Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ (3 –ø—É–Ω—Ç–∫–∞)\n\n"
    "–ü—Ä–∏ —Å—É–º–º–µ –ø—É–Ω–∫—Ç–æ–≤ –æ—Ç 4 –∏ –≤—ã—à–µ –¥–∏–∞–≥–Ω–æ–∑ ¬´–°–∏–Ω–¥—Ä–æ–º –®–µ–≥—Ä–µ–Ω–∞¬ª —Å—Ç–∞–≤–∏—Ç—Å—è —Å –≤—ã—Å–æ–∫–æ–π —Å—Ç–µ–ø–µ–Ω—å—é –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç–∏.\n\n"
    "‚ùóÔ∏è–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ —Å–∏–Ω–¥—Ä–æ–º –®–µ–≥—Ä–µ–Ω–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–µ–æ—Ä–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–º, —Ç–æ –µ—Å—Ç—å –±–µ–∑ –ø–æ—è–≤–ª–µ–Ω–∏—è –∞–Ω—Ç–∏—Ç–µ–ª –∫ SSA –∏/–∏–ª–∏ SSB, –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ª–∏—á–∏–µ –¥–≤—É—Ö –¥—Ä—É–≥–∏—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤.\n\n"
    "–û—á–µ–Ω—å —á–∞—Å—Ç–æ —Å–∏–º–ø—Ç–æ–º–∞—Ç–∏–∫–æ–π —Å—É—Ö–æ—Å—Ç–∏ –ø—Ä–æ—è–≤–ª—è—é—Ç —Å–µ–±—è –ø—Å–∏—Ö–æ—Å–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω—ã —Å—Ç—Ä–µ—Å—Å–æ–º, –¥–µ–ø—Ä–µ—Å—Å–∏–µ–π, —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å—é, –∞ —Ç–∞–∫ –∂–µ –Ω–µ–≤—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º–∏ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è–º–∏.\n\n"
    "–†–µ–∑—é–º–∏—Ä—É—è –≤—Å—ë –≤—ã—à–µ—Å–∫–∞–∑–∞–Ω–Ω–æ–µ: —Å—É–±—ä–µ–∫—Ç–∏–≤–Ω–æ–µ –æ—â—É—â–µ–Ω–∏–µ —Å—É—Ö–æ—Å—Ç–∏ –≥–ª–∞–∑ –∏–ª–∏ —Ä—Ç–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–≤–æ–¥–æ–º –¥–ª—è –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–∏–∞–≥–Ω–æ–∑–∞ ¬´–°–∏–Ω–¥—Ä–æ–º –®–µ–≥—Ä–µ–Ω–∞¬ª –∏ —Å–¥–∞—á–∏ –¥–æ—Ä–æ–≥–æ—Å—Ç–æ—è—â–∏—Ö –∞–Ω–∞–ª–∏–∑–æ–≤. –°–∏–º–ø—Ç–æ–º–∞—Ç–∏–∫—É —Å–ª–µ–¥—É–µ—Ç —Å–Ω–∞—á–∞–ª–∞ –æ–±—ä–µ–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å, –∞ –∑–∞—Ç–µ–º —É–∂–µ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ –æ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏—è—Ö.\n\n"
    "üëç–ï—Å–ª–∏ –í—ã –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É ¬´–°–ø–∞—Å–∏–±–æ!¬ª\n\n"
    "üì¨ –ï—Å–ª–∏ —É –í–∞—Å –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã, –≤–≤–µ–¥–∏—Ç–µ ¬´–°–≤—è–∑–∞—Ç—å—Å—è —Å –¥–æ–∫—Ç–æ—Ä–æ–º¬ª, –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –í–∞–º –ø–æ–º–æ—á—å."
            )
        return

    keywords_ty = ["—Å–ø–∞—Å–∏–±–æ", "–±–ª–∞–≥–æ–¥–∞—Ä—é", "—Ä–µ–∫–≤–∏–∑–∏—Ç—ã", "–ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å", "–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å", "–ø–æ–º–æ—á—å"]
    if any(keyword in text for keyword in keywords_ty):
        keyboard = [
            [InlineKeyboardButton("üá∑üá∫ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç (–†–æ—Å—Å–∏—è)", url=don_russia)],
            [InlineKeyboardButton("üá™üá∫ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç (–ï–°)", url=don_eu)],
        ]
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –†–∞–¥ –±—ã–ª –ø–æ–º–æ—á—å! üòä\n\n"
            "–ï—Å–ª–∏ —É –í–∞—Å –µ—Å—Ç—å –∂–µ–ª–∞–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –Ω–∞—à –ø—Ä–æ–µ–∫—Ç, –í—ã –º–æ–∂–µ—Ç–µ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ. "
            "–ë–ª–∞–≥–æ–¥–∞—Ä—è –í–∞—à–µ–π –ø–æ–º–æ—â–∏ –¥—Ä—É–≥–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç—ã —Å–º–æ–≥—É—Ç –ø–æ–ª—É—á–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –∏ –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ—ë–º –Ω–µ–¥—É–≥–µ.\n\n"
            "–ó–∞—Ä–∞–Ω–µ–µ –±–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –í–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É!",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
        return

    keywords_con = ["—Å–≤—è–∑–∞—Ç—å—Å—è", "–¥–æ–∫—Ç–æ—Ä–æ–º", "–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è"]
    if any(keyword in text for keyword in keywords_con):
        keyboard = [
            [InlineKeyboardButton("–Æ–∑ –ê–Ω–¥—Ä–µ–π –ê–Ω–∞—Ç–æ–ª—å–µ–≤–∏—á", callback_data="consult_andrey")],
            [InlineKeyboardButton("–ö–∞–∑–∞–Ω–æ–≤ –í–∞–ª–µ–Ω—Ç–∏–Ω –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á",  callback_data="consult_andrey")],
            [InlineKeyboardButton("–û—Ç–º–µ–Ω–∞", callback_data="cancel")]
        ]

        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
        return  

    keywords_bio = ["–æ –¥–æ–∫—Ç–æ—Ä–∞—Ö", "–æ –≤—Ä–∞—á–∞—Ö", "–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—ã",]
    if any(keyword in text for keyword in keywords_bio):
        await context.bot.send_photo(
            chat_id=update.effective_chat.id,
            photo="https://i.postimg.cc/ZKM364xq/1.jpg",
            caption=
            "üë®‚Äç‚öïÔ∏è <b>–Æ–∑ –ê–Ω–¥—Ä–µ–π –ê–Ω–∞—Ç–æ–ª—å–µ–≤–∏—á</b>\n"
            "–û–∫–æ–Ω—á–∏–ª –ú–ú–ê –∏–º. –°–µ—á–µ–Ω–æ–≤–∞ (2010)\n"
            "üîπ2012 - –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: –¢—Ä–∞–≤–º–∞—Ç–æ–ª–æ–≥–∏—è –∏ –æ—Ä—Ç–æ–ø–µ–¥–∏—è\n"
            "üîπ2016 - –∞—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä–∞ –Ω–∞ –±–∞–∑–µ –†–ú–ê–ü–û –≤ –æ–±–ª–∞—Å—Ç–∏ —Ö–∏—Ä—É—Ä–≥–∏–∏ –ø–æ–∑–≤–æ–Ω–æ—á–Ω–∏–∫–∞\n"
            "üîπ—Å 2016 - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã –≤ –ì–µ—Ä–º–∞–Ω–∏–∏, –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ —Ç–∞–∫–∂–µ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ ¬´–¢—Ä–∞–≤–º–∞—Ç–æ–ª–æ–≥–∏—è –∏ –æ—Ä—Ç–æ–ø–µ–¥–∏—è¬ª\n"
            "üîπ2018 - —Å–º–µ–Ω–∞ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–∞ ¬´–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –±–æ–ª–µ–∑–Ω–∏ –∏ —Ä–µ–≤–º–∞—Ç–æ–ª–æ–≥–∏—è¬ª\n"
            '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è–º–∏ –≤ —Ä–µ–∂–∏–º–µ —Ç–µ–ª–µ–º–µ–¥–∏—Ü–∏–Ω—ã –∑–∞–Ω–∏–º–∞—é—Å—å —Å 2020 –≥–æ–¥–∞ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ <a href="https://03online.com/doctor/75114-yuz_andrey_anatolevich#ui-id-1">03online.com</a>.\n' 
            "üßæ –í –ª–µ—á–µ–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø—Ä–æ—Ç–æ–∫–æ–ª—ã –ï–≤—Ä–æ–ø–µ–π—Å–∫–æ–≥–æ –∞–ª—å—è–Ω—Å–∞ –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–π —Ä–µ–≤–º–∞—Ç–æ–ª–æ–≥–æ–≤ (EULAR), –∞ —Ç–∞–∫–∂–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞—Ä–∞–±–æ—Ç–∫–∏\n"
            "üîπ–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —á–ª–µ–Ω –ù–µ–º–µ—Ü–∫–æ–≥–æ –æ–±—â–µ—Å—Ç–≤–∞ —Ä–µ–≤–º–∞—Ç–æ–ª–æ–≥–æ–≤, —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ –£–ó-–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ —Å—É—Å—Ç–∞–≤–æ–≤ DEGUM, —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ –Ω–µ–æ—Ç–ª–æ–∂–Ω–æ–π –ø–æ–º–æ—â–∏. –ê–≤—Ç–æ—Ä —Ç—Ä—ë—Ö –ø–∞—Ç–µ–Ω—Ç–æ–≤ –Ω–∞ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏—è –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–§, –∞ —Ç–∞–∫–∂–µ —Ä—è–¥–∞ —Å—Ç–∞—Ç–µ–π –≤ –∞–Ω–≥–ª–æ—è–∑—ã—á–Ω—ã—Ö PubMed —Ä–µ—Ü–µ–Ω–∑–∏—Ä—É–µ–º—ã—Ö –∂—É—Ä–Ω–∞–ª–∞—Ö\n",
            parse_mode="html")

        await context.bot.send_photo(
            chat_id=update.effective_chat.id,
            photo="https://i.postimg.cc/cLt3m2FB/2.jpg",
            caption=
            "üë®‚Äç‚öïÔ∏è <b>–ö–∞–∑–∞–Ω–æ–≤ –í–∞–ª–µ–Ω—Ç–∏–Ω –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á</b>\n"
            "–û–∫–æ–Ω—á–∏–ª –ò–≤–∞–Ω–æ–≤—Å–∫—É—é –º–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é –∞–∫–∞–¥–µ–º–∏—é (2019)\n"
            "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: –†–µ–≤–º–∞—Ç–æ–ª–æ–≥–∏—è (2021)\n"
            "üîπ—Å 2021 –ø–æ –Ω–∞—Å—Ç–æ—è—â–µ –≤—Ä–µ–º—è - —Ä–∞–±–æ—Ç–∞ –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –≤ –≥–æ—Ä–æ–¥–µ –í–ª–∞–¥–∏–º–∏—Ä\n"
            "üîπ–ê–≤—Ç–æ—Ä —Ä—è–¥–∞ –Ω–∞—É—á–Ω—ã—Ö –ø—É–±–ª–∏–∫–∞—Ü–∏–π, –≤ —Ç–æ–º —á–∏—Å–ª–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–∂–Ω—ã—Ö –í–ê–ö-—Ä–µ—Ü–µ–Ω–∑–∏—Ä—É–µ–º—ã—Ö –∂—É—Ä–Ω–∞–ª–∞—Ö. –£—á–∞—Å—Ç–Ω–∏–∫ –∏ –¥–æ–∫–ª–∞–¥—á–∏–∫ –Ω–∞ –Ω–∞—É—á–Ω–æ-–ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è—Ö. –°–æ–∞–≤—Ç–æ—Ä –º–µ—Ç–æ–¥–∏–∫–∏ –õ–§–ö –ø—Ä–∏ —Ä–µ–≤–º–∞—Ç–æ–∏–¥–Ω–æ–º –∞—Ä—Ç—Ä–∏—Ç–µ.\n", 
            parse_mode="html")
        return
    await update.message.reply_text(
    "üßê –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –ø–æ–∫–∞ —á—Ç–æ –Ω–µ –æ–±—É—á–µ–Ω —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"
    )
# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ ===
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user = query.from_user
    data = query.data

    if data == "consult_andrey" or data == "consult_valentin":
        consultant = CONSULTANTS["andrey"] if data == "consult_andrey" else CONSULTANTS["valentin"]
        context.user_data["consultant"] = consultant 

        keyboard = [
            [InlineKeyboardButton("–ü–æ–¥–≤–µ—Ä–¥–∏—Ç—å", callback_data="start_payment")],
            [InlineKeyboardButton("–û—Ç–º–µ–Ω–∞", callback_data="cancel")]
        ]
        await context.bot.send_message(
            chat_id=user.id,
            text=f"–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å {consultant['name']}.\n\n{CONSULTANT_WARNING}",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

    elif query.data == "start_payment":
        keyboard = [
            [InlineKeyboardButton("üí≥ –ÆMoney / –†–æ—Å—Å–∏–π—Å–∫–∏–µ –ø–ª–∞—Ç—ë–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã", callback_data="yoomoney")],
            [InlineKeyboardButton("üí≥ PayPal / –ï–°", callback_data="paypal")],
            [InlineKeyboardButton("üí≥ –ü—Ä—è–º–æ–π –ø–µ—Ä–µ–≤–æ–¥ —á–µ—Ä–µ–∑ –°–±–µ—Ä–±–∞–Ω–∫", callback_data="sberbank")]
        ]
        await context.bot.send_message(
            chat_id=user.id,
            text="üåç –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

    elif data in ["yoomoney", "paypal", "sberbank"]:
        payment_link = payment_links.get(data)
        keyboard = [
                [InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", url=payment_link)],
                [InlineKeyboardButton("‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª", callback_data="confirm_sber")],
                [InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="start_payment")]
            ]

        method_names = {
            "sberbank": "–°–±–µ—Ä–±–∞–Ω–∫",
            "yoomoney": "–ÆMoney / –¢–æ–ª—å–∫–æ –¥–ª—è –†–æ—Å—Å–∏–∏",
            "paypal": "PayPal / —Å—Ç—Ä–∞–Ω—ã –ï–°"
        }
        chosen_method = method_names.get(data)
        text_msg = (
            f"‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏ –æ–ø–ª–∞—Ç—É —á–µ—Ä–µ–∑ *{chosen_method}*.\n\n"
            "üìå –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–ª–∞—Ç–∏—Ç–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é, –Ω–∞–∂–∞–≤ ¬´–û–ø–ª–∞—Ç–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é¬ª.\n\n"
            "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ–ø–ª–∞—Ç—É, –Ω–∞–∂–∞–≤ ¬´‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª¬ª."
        )

        await context.bot.send_message(
            chat_id=user.id,
            text=text_msg,
            parse_mode="Markdown",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

    elif data.startswith("confirm_"):
        consultant = context.user_data.get("consultant")
        keyboard = [
            [InlineKeyboardButton(
                f"–°–≤—è–∑–∞—Ç—å—Å—è —Å –¥–æ–∫—Ç–æ—Ä–æ–º {consultant['name']}",
                url=f"https://t.me/{consultant['username'].lstrip('@')}"
            )]
        ]
        await context.bot.send_message(
            chat_id=user.id,
            text=THANK_YOU_TEXT,
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
        consultant_chat_id = consultant["id"]
        user_mention = f"<a href='tg://user?id={user.id}'>{user.first_name}</a>"
        notification_text = (
            f"üì¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_mention} –∑–∞–ø—Ä–æ—Å–∏–ª –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é.\n")
        await context.bot.send_message(
            chat_id=consultant_chat_id,
            text=notification_text,
            parse_mode="HTML")
# ===–û_–¢_–ó_–´_–í_–´_ ===
    # === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã ===
if not os.path.exists(REVIEWS_DB_FILE):
    conn = sqlite3.connect(REVIEWS_DB_FILE)
    cursor = conn.cursor()
    cursor.execute("""
    CREATE TABLE IF NOT EXISTS reviews (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        user_id INTEGER,
        username TEXT,
        nickname TEXT,
        title TEXT,
        rating INTEGER,
        text TEXT,
        approved INTEGER DEFAULT 0,
        created_at TEXT,
        admin_message_id INTEGER DEFAULT NULL
    )
    """)
    conn.commit()
    conn.close()

try:
    conn_tmp = sqlite3.connect(REVIEWS_DB_FILE)
    cur_tmp = conn_tmp.cursor()
    cur_tmp.execute("ALTER TABLE reviews ADD COLUMN admin_message_id INTEGER")
    conn_tmp.commit()
    conn_tmp.close()
except sqlite3.OperationalError:
    pass

def get_conn():
    return sqlite3.connect(REVIEWS_DB_FILE, check_same_thread=False)

def backup_db():
    if not os.path.exists(BACKUP_DIR):
        os.makedirs(BACKUP_DIR)
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    shutil.copyfile(
        REVIEWS_DB_FILE,
        os.path.join(BACKUP_DIR, f"reviews_{timestamp}.db")
    )

def delete_review_and_traces(review_id, context=None):
    conn = get_conn()
    cur = conn.cursor()
    cur.execute("SELECT title, text, admin_message_id FROM reviews WHERE id=?", (review_id,))
    r = cur.fetchone()
    if not r:
        conn.close()
        return None

    title, text_r, admin_message_id = r
    cur.execute("DELETE FROM reviews WHERE id=?", (review_id,))
    conn.commit()
    conn.close()

    try:
        conn_logs_local = sqlite3.connect("db_file", check_same_thread=False)
        cur_logs_local = conn_logs_local.cursor()
        cur_logs_local.execute(
            "DELETE FROM logs WHERE message = ? OR message = ?",
            (text_r, title)
        )
        conn_logs_local.commit()
        conn_logs_local.close()
    except Exception:
        pass
    # === –ü—Ä–æ—Å–º–æ—Ç—Ä ===
async def read_reviews(update: Update, context: ContextTypes.DEFAULT_TYPE, message=None):
    conn = get_conn()
    cursor = conn.cursor()
    cursor.execute(
        "SELECT id, title, rating, nickname FROM reviews WHERE approved=1 ORDER BY created_at DESC"
    )
    reviews = cursor.fetchall()
    conn.close()

    if not reviews:
        if message:
            await message.reply_text("–ü–æ–∫–∞ –Ω–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤.")
        else:
            await update.message.reply_text("–ü–æ–∫–∞ –Ω–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤.")
        return READING
    keyboard = [
        [InlineKeyboardButton(f"{title} ({'‚≠ê' * rating}) ‚Äî {nickname}", callback_data=f"user_read_{review_id}")]
        for review_id, title, rating, nickname in reviews
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    if message:
        await message.reply_text("üìñ –û—Ç–∑—ã–≤—ã:", reply_markup=reply_markup)
    else:
        await update.message.reply_text("üìñ –û—Ç–∑—ã–≤—ã:", reply_markup=reply_markup)
    return READING
    
async def user_read_review(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    review_id = int(query.data.split("_")[-1])

    conn = get_conn()
    cursor = conn.cursor()
    cursor.execute(
        "SELECT title, rating, nickname, text FROM reviews WHERE id=? AND approved=1", (review_id,)
    )
    review = cursor.fetchone()
    conn.close()
    title, rating, nickname, text_r = review

    keyboard = [
        [
            InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="user_back"),]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await context.bot.send_message(
        chat_id=query.message.chat_id,
        text=f"{title} ({rating}‚≠ê)\n\n{text_r}\n\n–û—Ç: {nickname}",
        reply_markup=reply_markup
    )
    return READING
    
async def user_back(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    await read_reviews(update, context, message=query.message)

read_reviews_handler = ConversationHandler(
    entry_points=[MessageHandler(filters.Regex("(?i)^–æ—Ç–∑—ã–≤—ã$"), read_reviews)],
    states={
        READING: [
            CallbackQueryHandler(user_read_review, pattern=r"^user_read_\d+$"),
            CallbackQueryHandler(user_back, pattern="^user_back$")
        ]
    },
    fallbacks=[],
    allow_reentry=True
)
# === –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ ===
async def admin_list_reviews(update: Update, context: ContextTypes.DEFAULT_TYPE, from_secret: bool = False):
    if from_secret and update.effective_user.id != ADMIN_CHAT_ID:
        return

    conn = get_conn()
    cursor = conn.cursor()
    cursor.execute("SELECT id, title, rating, nickname, approved FROM reviews ORDER BY created_at DESC")
    reviews = cursor.fetchall()
    conn.close()

    if not reviews:
        target = update.message if update.message else update.callback_query.message
        await target.reply_text("üì≠ –ü–æ–∫–∞ –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏.")
        return ADMIN_READING

    keyboard = []
    for review_id, title, rating, nickname, approved in reviews:
        status = "‚úÖ" if approved else "üïì"
        button_text = f"{status} {title} ({'‚≠ê' * rating}) ‚Äî {nickname}"
        keyboard.append([InlineKeyboardButton(button_text, callback_data=f"admin_read_{review_id}")])

    reply_markup = InlineKeyboardMarkup(keyboard)
    target = update.message if update.message else update.callback_query.message
    await target.reply_text(
        "üõ†Ô∏è *–ú–æ–¥–µ—Ä–∞—Ü–∏—è –æ—Ç–∑—ã–≤–æ–≤:*",
        parse_mode="Markdown",
        reply_markup=reply_markup
    )
    return ADMIN_READING

    # === –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∑—ã–≤–∞ ===
async def admin_read_review(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    review_id = int(query.data.split("_")[-1])

    conn = get_conn()
    cursor = conn.cursor()
    cursor.execute("SELECT title, rating, nickname, text, approved FROM reviews WHERE id=?", (review_id,))
    title, rating, nickname, text_r, approved = cursor.fetchone()
    conn.close()

    if approved:
        buttons = [
            InlineKeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"admin_edit_{review_id}"),
            InlineKeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"admin_delete_{review_id}")
        ]
    else:
        buttons = [
            InlineKeyboardButton("‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data=f"admin_approve_{review_id}"),
            InlineKeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"admin_delete_{review_id}")
        ]

    keyboard = [buttons, [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_back")]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(
        f"*{title}* ({rating}‚≠ê)\n\n{text_r}\n\nüë§ {nickname}",
        parse_mode="Markdown",
        reply_markup=reply_markup
    )
    return ADMIN_READING

    # === –û–¥–æ–±—Ä–µ–Ω–∏–µ ===
async def admin_approve_review(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    review_id = int(query.data.split("_")[-1])

    conn = get_conn()
    cursor = conn.cursor()
    cursor.execute("UPDATE reviews SET approved=1 WHERE id=?", (review_id,))
    cursor.execute("SELECT user_id FROM reviews WHERE id=?", (review_id,))
    user_row = cursor.fetchone()
    conn.commit()
    conn.close()
    backup_db()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if user_row and user_row[0]:
        try:
            await context.bot.send_message(chat_id=user_row[0], text="‚úÖ –í–∞—à –æ—Ç–∑—ã–≤ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω! –°–ø–∞—Å–∏–±–æ!")
        except Exception:
            pass

    await query.edit_message_text("‚úÖ –û—Ç–∑—ã–≤ –æ–¥–æ–±—Ä–µ–Ω.")
    return await admin_list_reviews(update, context)

# === –£–¥–∞–ª–µ–Ω–∏–µ ===
async def admin_delete_review(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    review_id = int(query.data.split("_")[-1])

    conn = get_conn()
    cursor = conn.cursor()
    cursor.execute("SELECT user_id FROM reviews WHERE id=?", (review_id,))
    user_row = cursor.fetchone()
    cursor.execute("DELETE FROM reviews WHERE id=?", (review_id,))
    conn.commit()
    conn.close()
    backup_db()

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_row and user_row[0]:
        try:
            await context.bot.send_message(chat_id=user_row[0], text="‚ùå –í–∞—à –æ—Ç–∑—ã–≤ –Ω–µ –ø—Ä–æ—à—ë–ª –º–æ–¥–µ—Ä–∞—Ü–∏—é –∏ –±—ã–ª —É–¥–∞–ª—ë–Ω.")
        except Exception:
            pass

    await query.edit_message_text("üóë –û—Ç–∑—ã–≤ —É–¥–∞–ª—ë–Ω.")
    return await admin_list_reviews(update, context)

# === –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ===
async def admin_edit_review(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    review_id = int(query.data.split("_")[-1])

    conn = get_conn()
    cursor = conn.cursor()
    cursor.execute("SELECT title, text FROM reviews WHERE id=?", (review_id,))
    title, text_r = cursor.fetchone()
    conn.close()

    context.user_data["edit_review_id"] = review_id
    await query.edit_message_text(
        f"üìù *–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∑—ã–≤–∞* **{title}**:\n\n"
        f"–¢–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç:\n{text_r}\n\n"
        f"‚úç –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–û—Ç–º–µ–Ω–∞'.",
        parse_mode="Markdown"
    )

    keyboard = [[InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="admin_cancel_edit")]]
    await query.message.reply_text("üí¨ –ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞:", reply_markup=InlineKeyboardMarkup(keyboard))
    return ADMIN_EDITING

async def admin_cancel_edit(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    return await admin_back(update, context)

async def admin_save_edit(update: Update, context: ContextTypes.DEFAULT_TYPE):
    review_id = context.user_data.get("edit_review_id")
    new_text = update.message.text.strip()

    if not new_text:
        await update.message.reply_text("‚ö†Ô∏è –¢–µ–∫—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")
        return ADMIN_EDITING

    conn = get_conn()
    cursor = conn.cursor()
    cursor.execute("UPDATE reviews SET text=? WHERE id=?", (new_text, review_id))
    conn.commit()
    conn.close()
    backup_db()

    await update.message.reply_text("‚úÖ –¢–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞ –æ–±–Ω–æ–≤–ª—ë–Ω.")
    return await admin_list_reviews(update, context)

# === –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É ===
async def admin_back(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    return await admin_list_reviews(update, context)

# === –í—Ö–æ–¥ –ø–æ —Å–µ–∫—Ä–µ—Ç–Ω–æ–º—É –∫–æ–¥—É ===
async def secret_entry(update: Update, context: ContextTypes.DEFAULT_TYPE):
    return await admin_list_reviews(update, context, from_secret=True)

# === –û_–¢_–ó_–´_–í_–´_ ===
    # === –ù–∞–ø–∏—Å–∞–Ω–∏–µ ===
async def start_review(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.strip().lower()
    if text != "–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤":
        return

    user_id = update.message.from_user.id
    conn = get_conn()
    cursor = conn.cursor()
    cursor.execute("SELECT id FROM reviews WHERE user_id=?", (user_id,))
    if cursor.fetchone():
        conn.close()
        await update.message.reply_text("‚ùå –í—ã —É–∂–µ –æ—Å—Ç–∞–≤–∏–ª–∏ –æ—Ç–∑—ã–≤.")
        return ConversationHandler.END
    conn.close()

    await update.message.reply_text(
        f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –æ—Ç–∑—ã–≤–æ–≤ –æ–± –æ–∫–∞–∑–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è—Ö!\n\n"
        f"‚ùóÔ∏è –ü—Ä–∞–≤–∏–ª–∞ –æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤:\n"
        f"üïµÔ∏è –û—Ç–∑—ã–≤ –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–º\n"
        f" –û–¥–∏–Ω –æ—Ç–∑—ã–≤ —Å –∞–∫–∫–∞—É–Ω—Ç–∞\n"
        f"‚úç –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ ‚Äî {MAX_TEXT_LENGTH} —Å–∏–º–≤–æ–ª–æ–≤\n"
        f"üîç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–∑–¥–µ—Ä–∂–∏—Ç–µ—Å—å –æ—Ç –Ω–µ–ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π. –í—Å–µ –æ—Ç–∑—ã–≤—ã –ø—Ä–æ—Ö–æ–¥—è—Ç –º–æ–¥–µ—Ä–∞—Ü–∏—é\n\n"
        "üëâ –í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤–∞—à–µ–≥–æ –æ—Ç–∑—ã–≤–∞:"
    )
    return TITLE
    # === –ó–∞–≥–æ–ª–æ–≤–æ–∫ ===
async def review_title(update: Update, context: ContextTypes.DEFAULT_TYPE):
    title = update.message.text.strip()
    if not title:
        await update.message.reply_text("–ü–æ–ª–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –í–≤–µ–¥–∏—Ç–µ —Å–Ω–æ–≤–∞:")
        return TITLE

    context.user_data["review"] = {
        "title": title,
        "user_id": update.message.from_user.id,
        "username": f"@{update.message.from_user.username}" if update.message.from_user.username else "Anonymous"
    }

    keyboard = [[InlineKeyboardButton(f"{i}‚≠ê", callback_data=f"rate_{i}") for i in range(1, 6)]]
    await update.message.reply_text("–î–∞–π—Ç–µ –í–∞—à—É –æ—Ü–µ–Ω–∫—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ —à–∫–∞–ª–µ –æ—Ç 1‚Äì5:", reply_markup=InlineKeyboardMarkup(keyboard))
    return RATING
    # === –û—Ü–µ–Ω–∫–∞ ===
async def review_rating(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    rating = int(query.data.split("_")[1])
    context.user_data["review"]["rating"] = rating

    await query.edit_message_text(
        f"–í—ã –¥–∞–ª–∏ –æ—Ü–µ–Ω–∫—É: {rating}‚≠ê. –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –í–∞—Å!\n\n–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞ (–Ω–µ –±–æ–ª–µ–µ {MAX_TEXT_LENGTH} —Å–∏–º–≤–æ–ª–æ–≤):"
    )
    return TEXT
    # === –ü–æ–¥–ø–∏—Å—å ===
async def review_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.strip()
    if len(text) > MAX_TEXT_LENGTH:
        await update.message.reply_text(
            f"–ü—Ä–µ–≤—ã—à–µ–Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ {MAX_TEXT_LENGTH} —Å–∏–º–≤–æ–ª–æ–≤. "
            f"–°–æ–∫—Ä–∞—Ç–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∞ {len(text) - MAX_TEXT_LENGTH} —Å–∏–º–≤–æ–ª–æ–≤."
        )
        return TEXT
    context.user_data["review"]["text"] = text
    keyboard = [
        [InlineKeyboardButton("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∏–∫ Telegram", callback_data="nick_username")],
        [InlineKeyboardButton("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Å–µ–≤–¥–æ–Ω–∏–º", callback_data="nick_custom")]
    ]
    await update.message.reply_text("–ö–∞–∫ –ø–æ–¥–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤?", reply_markup=InlineKeyboardMarkup(keyboard))
    return NICKNAME
async def review_nickname(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    if query.data == "nick_username":
        context.user_data["review"]["nickname"] = context.user_data["review"]["username"] or "Anonymous"
        await query.edit_message_text("–ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–∞—à –Ω–∏–∫ Telegram")
        return await review_confirm(update, context)
    else:
        await query.edit_message_text("–í–≤–µ–¥–∏—Ç–µ –ø—Å–µ–≤–¥–æ–Ω–∏–º:")
        return NICKNAME_CUSTOM

async def review_nickname_custom(update: Update, context: ContextTypes.DEFAULT_TYPE):
    nickname = update.message.text.strip()
    if not nickname:
        await update.message.reply_text("–ü–æ–ª–µ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ. –í–≤–µ–¥–∏—Ç–µ —Å–Ω–æ–≤–∞:")
        return NICKNAME_CUSTOM
    context.user_data["review"]["nickname"] = nickname
    return await review_confirm(update, context)
    # === –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ ===
async def review_confirm(update: Update, context: ContextTypes.DEFAULT_TYPE):
    review = context.user_data["review"]
    date_str = datetime.now().strftime("%d.%m.%Y")
    text = (
        f"‚ú® –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–∑—ã–≤ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π\n\n"
        f"**–ó–∞–≥–æ–ª–æ–≤–æ–∫:** {review['title']}\n"
        f"**–û—Ü–µ–Ω–∫–∞:** {'‚≠ê'*review['rating']}\n"
        f"**–¢–µ–∫—Å—Ç:** {review['text']}\n"
        f"**–ê–≤—Ç–æ—Ä:** {review['nickname']}"
        f"**–î–∞—Ç–∞:** {date_str}"
    )
    keyboard = [
        [InlineKeyboardButton("‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é", callback_data="send_review")],
        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_review")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    if update.callback_query:
        await update.callback_query.edit_message_text(text, reply_markup=reply_markup)
    else:
        await update.message.reply_text(text, reply_markup=reply_markup)
    return CONFIRM
    # === –û—Ç–ø—Ä–∞–≤–∫–∞ ===
async def review_final(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    review = context.user_data["review"]

    if query.data == "send_review":
        conn = get_conn()
        cursor = conn.cursor()
        cursor.execute("""
            INSERT INTO reviews (user_id, username, nickname, title, rating, text, approved, created_at)
            VALUES (?, ?, ?, ?, ?, ?, 0, ?)
        """, (
            review["user_id"],
            review["username"],
            review["nickname"],
            review["title"],
            review["rating"],
            review["text"],
            datetime.now().isoformat()
        ))
        conn.commit()
        review_id = cursor.lastrowid
        conn.close()
        backup_db()

        await context.bot.send_message(
            chat_id=ADMIN_CHAT_ID,
            text=(
                f"üÜï –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤ –æ—Ç {review['nickname']}\n"
                f"–û—Ü–µ–Ω–∫–∞: {'‚≠ê' * review['rating']}\n")
        )
        await query.edit_message_text(
            "‚úÖ –í–∞—à –æ—Ç–∑—ã–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é. –í—ã –±—É–¥–µ—Ç–µ –æ–ø–æ–≤–µ—â–µ–Ω—ã –æ–± –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞. –°–ø–∞—Å–∏–±–æ!"
        )
        return ConversationHandler.END
    else:
        await query.edit_message_text("‚ùå –û—Ç–∑—ã–≤ –æ—Ç–º–µ–Ω—ë–Ω.")
        return ConversationHandler.END
# === –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ ===
moderation_handler = MessageHandler(filters.Regex(f"^{SECRET_MODERATION_CODE}$"), secret_entry)

admin_review_conv = ConversationHandler(
    entry_points=[moderation_handler],
    states={
        ADMIN_READING: [
            CallbackQueryHandler(admin_read_review, pattern=r"^admin_read_\d+$"),
            CallbackQueryHandler(admin_approve_review, pattern=r"^admin_approve_\d+$"),  # –æ–¥–æ–±—Ä–∏—Ç—å
            CallbackQueryHandler(admin_delete_review, pattern=r"^admin_delete_\d+$"),    # —É–¥–∞–ª–∏—Ç—å
            CallbackQueryHandler(admin_edit_review, pattern=r"^admin_edit_\d+$"),
            CallbackQueryHandler(admin_back, pattern="^admin_back$")
        ],
        ADMIN_EDITING: [
            MessageHandler(filters.TEXT & ~filters.COMMAND, admin_save_edit),
            CallbackQueryHandler(admin_cancel_edit, pattern="^admin_cancel_edit$")
        ],
    },
    fallbacks=[CommandHandler("cancel", lambda u, c: ConversationHandler.END)],
    allow_reentry=True)
review_conv = ConversationHandler(
    entry_points=[MessageHandler(filters.Regex(r"(?i)^–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤$"), start_review)],
    states={
        TITLE: [MessageHandler(filters.TEXT & ~filters.COMMAND, review_title)],
        RATING: [CallbackQueryHandler(review_rating, pattern=r"^rate_\d+$")],
        TEXT: [MessageHandler(filters.TEXT & ~filters.COMMAND, review_text)],
        NICKNAME: [CallbackQueryHandler(review_nickname, pattern="^nick_")],
        NICKNAME_CUSTOM: [MessageHandler(filters.TEXT & ~filters.COMMAND, review_nickname_custom)],
        CONFIRM: [CallbackQueryHandler(review_final, pattern="^(send_review|cancel_review)$")],
    },
    fallbacks=[CommandHandler("cancel", lambda u, c: ConversationHandler.END)],
    allow_reentry=True
)

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()
   
    app.add_handler(review_conv)
    app.add_handler(admin_review_conv)
    app.add_handler(read_reviews_handler)
    app.add_handler(moderation_handler)
    app.add_handler(CommandHandler("start", handle_message))
    app.add_handler(CommandHandler("stats", stats))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.add_handler(CallbackQueryHandler(button_handler))
    app.bot.delete_webhook()
    app.run_webhook(
        listen="0.0.0.0",
        port=int(os.environ.get("PORT", 8443)),
        webhook_url=f"{PUBLIC_URL}/{BOT_TOKEN}",
        drop_pending_updates=True
    )
if __name__ == "__main__": 
    main()